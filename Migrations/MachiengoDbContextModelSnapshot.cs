// <auto-generated />
using System;
using Machinego_Demo.DataAccesLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Machinego_Demo.Migrations
{
    [DbContext(typeof(MachiengoDbContext))]
    partial class MachiengoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Machinego_Demo.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MachineType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attachment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MachineType = 1,
                            Name = "Grapple"
                        },
                        new
                        {
                            Id = 2,
                            MachineType = 1,
                            Name = "Elek Ataşmanı"
                        },
                        new
                        {
                            Id = 3,
                            MachineType = 3,
                            Name = "Diğer"
                        },
                        new
                        {
                            Id = 4,
                            MachineType = 2,
                            Name = "Açılı Süpürge"
                        },
                        new
                        {
                            Id = 5,
                            MachineType = 2,
                            Name = "Beton Kırıcı"
                        });
                });

            modelBuilder.Entity("Machinego_Demo.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MachineCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MachineCategory = 1,
                            Name = "Mercedes"
                        },
                        new
                        {
                            Id = 2,
                            MachineCategory = 2,
                            Name = "CAT"
                        },
                        new
                        {
                            Id = 3,
                            MachineCategory = 1,
                            Name = "BMW"
                        },
                        new
                        {
                            Id = 4,
                            MachineCategory = 2,
                            Name = "Renault"
                        });
                });

            modelBuilder.Entity("Machinego_Demo.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<int>("MachineCategory")
                        .HasColumnType("int");

                    b.Property<int>("MachineType")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ProductionYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("Machinego_Demo.Models.MachineAttachments", b =>
                {
                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("AttachmentId")
                        .HasColumnType("int");

                    b.HasKey("MachineId", "AttachmentId");

                    b.HasIndex("AttachmentId");

                    b.ToTable("MachineAttachments");
                });

            modelBuilder.Entity("Machinego_Demo.Models.MachineCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineCategory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hafriyat Grubu   "
                        },
                        new
                        {
                            Id = 2,
                            Name = "Asfalt ve Yol Makinalari"
                        });
                });

            modelBuilder.Entity("Machinego_Demo.Models.MachineType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("MachineCategory")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MachineType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MachineCategory = 1,
                            Name = "Ekskavatörler"
                        },
                        new
                        {
                            Id = 2,
                            MachineCategory = 1,
                            Name = "Bobcat "
                        },
                        new
                        {
                            Id = 3,
                            MachineCategory = 2,
                            Name = "El Silindiri"
                        },
                        new
                        {
                            Id = 4,
                            MachineCategory = 2,
                            Name = "Mobil Taş Kırma Makinası"
                        });
                });

            modelBuilder.Entity("Machinego_Demo.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@mail.com",
                            Name = "Admin",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("Machinego_Demo.Models.MachineAttachments", b =>
                {
                    b.HasOne("Machinego_Demo.Models.Attachment", "Attachment")
                        .WithMany("MachineAttachments")
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Machinego_Demo.Models.Machine", "Machine")
                        .WithMany("MachineAttachments")
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("Machinego_Demo.Models.Attachment", b =>
                {
                    b.Navigation("MachineAttachments");
                });

            modelBuilder.Entity("Machinego_Demo.Models.Machine", b =>
                {
                    b.Navigation("MachineAttachments");
                });
#pragma warning restore 612, 618
        }
    }
}
